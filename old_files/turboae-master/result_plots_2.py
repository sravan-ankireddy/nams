
import numpy as np
import matplotlib.pyplot as plt
import math


snrs_ric_Fast_baselines = np.array([-2,-1,0,1])
snrs = np.array([-1.5,-1,-0.5,0,0.5,1,1.5,2,2.5,3])
baseline_ric_fast=(1/1000)*np.array([108.3691 ,  44.6619   , 6.0452   , 0.6311])

##Old results
#awgn_on_awgn_trainable=np.array([0.05905376747250557, 0.035871054977178574, 0.02057831361889839, 0.01124388724565506, 0.005900294054299593, 0.0029478983487933874, 0.0014227498322725296, 0.0006711993482895195, 0.00028654999914579093, 0.00011155061656609178])
#ric_fast_awgn_trainable=np.array([0.08568878471851349, 0.04964548721909523, 0.02494122087955475, 0.010762392543256283, 0.0040036956779658794, 0.0012422489235177636, 0.0003840495483018458, 0.00011250052193645388, 3.0600069294450805e-05, 8.799993338470813e-06])
#awgn_on_awgn_uniform=np.array([0.08530783653259277, 0.051416244357824326, 0.02743779681622982, 0.012829786166548729, 0.0053354958072304726, 0.0020194489043205976, 0.00072309939423576, 0.0002529500052332878, 8.825040276860818e-05, 2.7600051907938905e-05])


##New results (changed padding to circular, not sure if it matters)
##All are trained on 200 epochs

##awgn_on_awgn_trainable = np.array([0.07028722018003464, 0.043039120733737946, 0.02443229965865612, 0.012899939902126789, 0.0065402439795434475, 0.0031708721071481705, 0.0015047481283545494, 0.0006785821751691401, 0.00029237481066957116, 0.00011533371434779838])
##awgn_on_awgn_grid = np.array([0.07731842249631882, 0.047526467591524124, 0.026773249730467796, 0.013444600626826286, 0.006072865333408117, 0.002520372625440359, 0.0010064993984997272, 0.0003691661695484072, 0.00013045840023551136, 4.3083535274490714e-05])
##awgn_on_awgn_uniform = np.array([0.061041153967380524, 0.040552768856287, 0.02557564713060856, 0.01577087678015232, 0.009297040291130543, 0.005464700981974602, 0.0030559145379811525, 0.0016586239216849208, 0.0008690404356457293, 0.0004307907947804779])

##rician_on_awgn_trainable = np.array([0.0873166024684906, 0.05366603285074234, 0.02991447225213051, 0.014829565770924091, 0.006824948359280825, 0.002907539950683713, 0.0011825824622064829, 0.0004809158272109926, 0.0001945832627825439, 7.708390330662951e-05])
##rician_on_awgn_grid = np.array([0.06760481745004654, 0.041546955704689026, 0.02336077392101288, 0.01235269382596016, 0.0060522002167999744, 0.0028628737200051546, 0.00129791465587914, 0.0005863325204700232, 0.00025645800633355975, 0.00010041729547083378])
##rician_on_awgn_uniform = np.array([0.0781407281756401, 0.04987550526857376, 0.02938319928944111, 0.01614966243505478, 0.00828912016004324, 0.004009454045444727, 0.0018497488927096128, 0.0008214992703869939, 0.000344916625181213, 0.00014137507241684943])

rician_on_rician_trainable = np.array([0.04411900416016579, 0.024050235748291016, 0.012141197919845581, 0.005592443980276585, 0.0025433700066059828, 0.0011131652863696218, 0.0004892493016086519, 0.0002140832511940971, 9.066738130059093e-05, 4.016691309516318e-05])
rician_on_rician_grid = np.array([0.03470500558614731, 0.019508663564920425, 0.010363074019551277, 0.005254784598946571, 0.002584956819191575, 0.001239498145878315, 0.0005776241305284202, 0.0002637914731167257, 0.00011750041448976845, 4.866693416261114e-05])
rician_on_rician_uniform = np.array([0.041529133915901184, 0.024592993780970573, 0.01367752905935049, 0.007184899877756834, 0.003634621389210224, 0.0017800412606447935, 0.0008794157183729112, 0.0003970413818024099, 0.00018249980348628014, 7.437549356836826e-05])


plt.plot(snrs ,rician_on_rician_trainable,'g>-', label='TI')
plt.plot(snrs ,rician_on_rician_grid,'r*-', label='Grid')
plt.plot(snrs ,rician_on_rician_uniform,'m|-', label='Random')
plt.plot(snrs_ric_Fast_baselines ,baseline_ric_fast,'b<-', label='LTE Turbo')

plt.xlabel('SNR',fontsize=15)
plt.ylabel('BER',fontsize=15)
plt.legend(loc='best',fontsize=9)
#plt.xlim([0, 3])
plt.yscale('log')
plt.grid()

#plt.title("Robustness to Rician + Chirp")
plt.xticks(fontsize=13)
plt.yticks(fontsize=13)
plt.savefig('test.png')
plt.show()